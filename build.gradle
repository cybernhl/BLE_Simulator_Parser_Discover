import org.gradle.util.internal.VersionNumber
buildscript {
    ext {
        agp_gradle = '8.2.0'
        android_gradle_plugin_version = agp_gradle
        kotlin_version = "1.9.0"
        // coroutine
        coroutine_version = "1.6.4"
        kotlin_coroutines_version = coroutine_version
        kotlin_ktor_version = "1.6.2"//2.1.2
        ktx_extensions_version = '2.2.0'
        //AndroidX
        appcompat = "1.4.0"//1.4.0
        appcompat_version = appcompat
        material = "1.6.0"
//1.4.0 //1.7.0 get Can't determine type for tag '<macro name="m3_comp_bottom_app_bar_container_color">?attr/colorSurface</macro> https://stackoverflow.com/questions/74191324/cant-determine-type-for-tag-macro-name-m3-comp-bottom-app-bar-container-colo
        material_version = material
        cardview_version = "1.0.0"
        constraintLayout = "2.1.4"
        constraintlayout_version = constraintLayout
        navigation_version = "2.5.2"
        // 2.3.5 <-->androidx.navigation.safeargs    2.4.1<--> androidx.navigation.safeargs.kotlin
        ktx_version = "1.7.0"
        jetpack_windowmanager_version = '1.0.0'
        jetpack_camera_version = '1.1.0'
        camerax_version = jetpack_camera_version
        // activiy ktx
        activity_ktx_version = "1.4.0"
        fragment_version = "1.4.1"//1.3.6 1.4.0 1.4.1
        fragment_ktx_version = fragment_version
        lifecycle_version = "2.4.0"
        //DB : Room
        room_version = "2.3.0"
//FIXME if use Apple M1 use version over 2.4.2 or must keep use "sqlite-jdbc" version
        //AndroidX New UI compose
        compose_version = '1.1.1'
        //Google Service
        google_services_plugin_version = "4.3.14"
        google_services_version = "18.1.0"
        //DI
        // dagger hilt
        dagger_hilt_version = "2.44.2"
        dagger_hilt_viewmodel_version = "1.0.0-alpha03"
        // koin
        koin_version = "2.2.2"

        gson_version = "2.10.1"

        // http
        retrofit_version = "2.9.0"
        okhttp_version = '4.10.0'
        okhttp_interceptor_version = okhttp_version
        okhttp_logging_version = "4.10.0"

        //glide
        glide_version = '4.12.0'
        // timber
        timber_version = '5.0.1'
        // utilcode & utilcodex
        utilcode_version = '1.30.7'
        utilcodex_version = '1.31.0'

        ////airbnb
        //epoxy
        epoxy_version = '4.6.4'
        ////mavericks
        mavericks_version = '2.7.0'
        ////Square
        //sqldelight
        sqldelight_version = '1.5.0'

        //lombok
        lombok_version = '6.5.1'

        compileSdkVersion = 31
        compileSdk = compileSdkVersion
        targetSdkVersion = compileSdk
        targetSdk = targetSdkVersion
        minSdkVersion = 21
        minSdk = minSdkVersion

        logback_version = "1.2.3"
        slf4j_version = "1.7.25"
    }
    dependencies {
//        classpath "com.android.tools.build:gradle:$agp_gradle"
//        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
//        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
        classpath "com.google.code.gson:gson:$gson_version"
        classpath "com.google.dagger:hilt-android-gradle-plugin:$dagger_hilt_version"
//        //navigation Pass data between destinations
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:$navigation_version"
//
        classpath "com.google.gms:google-services:$google_services_plugin_version"
//
        classpath "com.squareup.sqldelight:gradle-plugin:$sqldelight_version"
        classpath "com.github.qq549631030:android-junk-code:1.0.7"
        classpath 'com.yanzhenjie.andserver:plugin:2.1.10'
        classpath "io.freefair.gradle:lombok-plugin:$lombok_version"
        //TODO this for POM & script GattRegistryGenerator.groovy --> gatt xml file to gson
        //Ref : https://www.cxyzjd.com/article/angcyo/88692186
        classpath "org.codehaus.groovy:groovy-xml:3.0.9"
        classpath "org.codehaus.groovy:groovy-json:3.0.7"
    }
}

plugins {
    //https://developer.android.com/studio/build?hl=zh-tw#groovy
    id 'com.android.application' version '8.2.0' apply false
    id 'com.android.library' version '8.2.0' apply false
//    alias(libs.plugins.android.application) apply false
//    alias(libs.plugins.android.library) apply false

    id "org.jetbrains.kotlin.jvm" version '1.9.0' apply false
    id "org.jetbrains.kotlin.multiplatform" version '1.9.0' apply false
    id 'org.jetbrains.kotlin.android' version '1.9.0' apply false
    //KTS
//    kotlin("jvm") version libs.versions.kotlin.version.get() apply false
//    kotlin("multiplatform") version libs.versions.kotlin.version.get() apply false
//    alias(libs.plugins.kotlin.android) apply false

    id "org.jetbrains.compose" version '1.5.0' apply false
//    id("org.jetbrains.compose") version libs.versions.compose.version.get() apply false
    id "org.jetbrains.kotlin.plugin.serialization" version '1.9.0' apply false

    id 'com.google.dagger.hilt.android' version '2.44.2' apply false
//    id "org.jetbrains.gradle.apple.applePlugin"//https://plugins.gradle.org/plugin/org.jetbrains.gradle.apple.applePlugin
//    id "io.github.david-allison-1.rust-android-gradle.rust-android"
}

group = "com.example"
version = "1.0-SNAPSHOT"

allprojects {
    repositories {
        gradlePluginPortal()
        maven {
            url = "https://plugins.gradle.org/m2/"
        }

        mavenCentral()
        google()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven {
            url = uri('https://maven.pkg.jetbrains.space/public/p/compose/dev')
        }
        maven {
            url = "https://maven.pkg.jetbrains.space/kotlin/p/kotlin/kotlin-js-wrappers"
        }
        maven {
            url "https://raw.githubusercontent.com/cybernhl/maven-repository/master/"
        }

        mavenLocal()
        maven {
            url = 'file://' + new File(System.getProperty('user.home'), '.m2/repository').absolutePath
        }
    }

    //https://www.baeldung.com/java-comparing-versions
    println "Show  current define room version  : ${room_version}"
    def room_version = VersionNumber.parse(room_version)
    def target_room_version = VersionNumber.parse("2.4.0-alpha03")
//    println "Show  current define room ver  : ${room_version.minor}"
//    println "Show  target_room_version  : ${target_room_version.minor}"
//    println "Show  compareTo  : ${room_version.compareTo(target_room_version)}"
    if (room_version.compareTo(target_room_version) < 0) {
        configurations.all {
            resolutionStrategy {
                force 'org.xerial:sqlite-jdbc:3.34.0'
            }
        }
    }
}